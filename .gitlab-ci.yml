stages:
  - format_and_typing
  - test
  - build_and_publish_images
  - deploy

format_and_typing:
  stage: format_and_typing
  when: on_success
  image: registry.moonkbr.fr/base/gitlab_image:python3.12.3
  script:
    - poetry install --with format_and_typing_dep
    - poetry run black --config python-fmt-conf/pyproject.toml --check .
    - poetry run mypy ml_pipeline

test:
  stage: test
  when: on_success
  image: registry.moonkbr.fr/base/gitlab_image:python3.12.3
  script:
    - poetry install --with test_dep
    - poetry run python -m pytest

build_and_publish_images:
  stage: build_and_publish_images
  rules:
    - if: $CI_COMMIT_TAG
      when: manual
  image:
    name: gcr.io/kaniko-project/executor:v1.14.0-debug
    entrypoint: [""]
  script:
    - cat $REGISTRY_KANIKO > /kaniko/.docker/config.json
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY}/$CI_PROJECT_PATH:$CI_COMMIT_TAG"

deploy:
  stage: deploy
  rules:
    - if: '$CI_COMMIT_TAG =~ /^\d+(?:\.\d+)?(?:\.\d+)?$/'
      when: manual
  image: "${CI_REGISTRY}/$CI_PROJECT_PATH:$CI_COMMIT_TAG"
  script:
    - python -m ml_pipeline --profile remote

